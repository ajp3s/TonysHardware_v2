# Generated by Django 4.2.3 on 2023-08-09 19:58

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AMDRadeonGPUModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('generation', models.CharField(choices=[('Radeon RX', ' Radeon RX'), ('Radeon R9', 'Radeon R9'), ('Radeon R8', 'Radeon R8'), ('Radeon R7', 'Radeon R7'), ('Radeon R6', 'Radeon R6'), ('Radeon R5', 'Radeon R5'), ('Radeon R4', 'Radeon R4'), ('Radeon R3', 'Radeon R3'), ('Radeon R2', 'Radeon R2')], max_length=20)),
                ('type', models.CharField(choices=[('Desktop', 'Desktop'), ('Laptop', 'Laptop'), ('Integrated(iGPU)', 'Integrated(iGPU)')], max_length=20)),
                ('series', models.CharField(max_length=30)),
                ('model', models.CharField(max_length=100)),
                ('graphics_processor', models.CharField(max_length=20)),
                ('architecture', models.CharField(max_length=20)),
                ('process_size', models.CharField(max_length=5)),
                ('transistors_count', models.CharField(max_length=30)),
                ('base_clock', models.PositiveIntegerField()),
                ('boost_clock', models.PositiveIntegerField()),
                ('memory_clock', models.PositiveIntegerField()),
                ('memory_bus_width', models.PositiveIntegerField()),
                ('memory_bandwidth', models.PositiveIntegerField()),
                ('release_date', models.DateField(auto_now=True)),
                ('tdp', models.PositiveIntegerField(verbose_name='Thermal Design Power(TDP)')),
                ('suggested_psu', models.CharField(max_length=10)),
                ('graphics_api_support', models.CharField(max_length=60)),
                ('image', models.ImageField(upload_to='nvidia_gpu_images/')),
                ('maximum_gpu_temperature', models.CharField(max_length=5, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CpuModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('manufacturer', models.CharField(choices=[('Intel', 'Intel'), ('AMD', 'AMD')], max_length=50)),
                ('model', models.CharField(max_length=50)),
                ('cores_count', models.CharField(max_length=150)),
                ('base_clock', models.PositiveIntegerField()),
                ('boost_clock', models.PositiveIntegerField()),
                ('L1_cache', models.PositiveIntegerField()),
                ('L2_cache', models.PositiveIntegerField()),
                ('L3_cache', models.PositiveIntegerField()),
                ('tdp', models.PositiveIntegerField(verbose_name='Thermal Design Power(TDP)')),
                ('release_price', models.CharField(default=0, max_length=4)),
                ('image', models.ImageField(upload_to='cpu_images/')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='NvidiaGPUModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('Desktop', 'Desktop'), ('Laptop', 'Laptop')], max_length=20)),
                ('generation', models.CharField(choices=[('Nvidia GeForce RTX', 'Nvidia GeForce RTX'), ('Nvidia GeForce GTX', 'Nvidia GeForce GTX'), ('Nvidia RTX', 'Nvidia RTX'), ('Nvidia T', 'Nvidia T'), ('Nvidia L', 'Nvidia L')], max_length=20, null=True)),
                ('series', models.CharField(max_length=30)),
                ('model', models.CharField(max_length=100)),
                ('graphics_processor', models.CharField(max_length=20)),
                ('architecture', models.CharField(max_length=20)),
                ('process_size', models.CharField(max_length=5)),
                ('transistors_count', models.CharField(max_length=30)),
                ('base_clock', models.PositiveIntegerField()),
                ('boost_clock', models.PositiveIntegerField()),
                ('memory_clock', models.PositiveIntegerField()),
                ('memory_bus_width', models.PositiveIntegerField()),
                ('memory_bandwidth', models.PositiveIntegerField()),
                ('release_date', models.DateField(auto_now=True)),
                ('tdp', models.PositiveIntegerField(verbose_name='Thermal Design Power(TDP)')),
                ('suggested_psu', models.CharField(max_length=10)),
                ('graphics_api_support', models.CharField(max_length=60)),
                ('image', models.ImageField(upload_to='nvidia_gpu_images/')),
                ('maximum_gpu_temperature', models.CharField(max_length=5, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PsuModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('manufacturer', models.CharField(choices=[('ABS', 'ABS'), ('Antec', 'Antec'), ('AOpen', 'AOpen'), ('Apevia', 'Apevia'), ('AXLE', 'AXLE'), ('Be quiet!', 'Be quiet!'), ('Black Box', 'Black Box'), ('Cooler Master', 'Cooler Master'), ('Coolmax', 'Coolmax'), ('Corsair', 'Corsair'), ('Curtiss-Wright', 'Curtiss-Wright'), ('Deepcool', 'Deepcool'), ('Delta Electronics', 'Delta Electronics'), ('Dynapower USA', 'Dynapower USA'), ('Eaton', 'Eaton'), ('Emerson Network Power', 'Emerson Network Power'), ('EVGA', 'EVGA'), ('Foxconn', 'Foxconn'), ('G.SKILL', 'G.SKILL'), ('LIAN LI', 'LIANLI'), ('NZXT', 'NZXT'), ('Phanteks', 'Phanteks'), ('Qualstar', 'Qualstar'), ('RIOTORO', 'RIOTORO'), ('Rosewill', 'Rosewill'), ('Seasonic', 'Seasonic'), ('SIIG', 'SIIG'), ('Shuttle', 'Shuttle'), ('Supermicro', 'Supermicro'), ('TDK', 'TDK'), ('Thermaltake', 'Thermaltake'), ('UMEC', 'UMEC'), ('Vertiv', 'Vertiv'), ('XFX', 'XFX')], max_length=50, null=True)),
                ('max_dc_output', models.PositiveIntegerField()),
                ('efficiency_standard', models.CharField(choices=[('80 Plus', '80 Plus'), ('Bronze', 'Bronze'), ('Silver', 'Silver'), ('Gold', 'Gold'), ('Platinum', 'Platinum'), ('Titanium', 'Titanium')], max_length=50)),
                ('modular', models.CharField(choices=[('Fully modular', 'Fully modular'), ('Semi-modular', 'Semi-modular'), ('Non-modular', 'Non-modular')], max_length=50, null=True)),
                ('connectors', models.CharField(max_length=200, null=True)),
                ('release_price', models.CharField(default=0, max_length=4)),
                ('image', models.ImageField(upload_to='psu_images/')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RAMMemoryModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('brand', models.CharField(choices=[('ADATA', 'ADATA'), ('Crucial', 'Crucial'), ('Transcend', 'Transcend'), ('Hynix', 'Hynix'), ('Micron', 'Micron'), ('GeIL', 'GeIL'), ('Team Group', 'Team Group'), ('Qimonda', 'Qimonda'), ('G.Skill', 'G.Skill'), ('Smart Modular', 'Smart Modular'), ('Apacer', 'Apacer'), ('Samsung', 'Samsung'), ('Kingston', 'Kingston'), ('Patriot', 'Patriot'), ('Corsair', 'Corsair'), ('Mushkin', 'Mushkin'), ('PNY', 'PNY')], max_length=50)),
                ('capacity', models.PositiveIntegerField()),
                ('ram_type', models.CharField(choices=[('DDR2', 'DDR2'), ('DDR3', 'DDR3'), ('DDR4', 'DDR4'), ('DDR5', 'DDR5')], max_length=10)),
                ('ram_frequency', models.CharField(max_length=100)),
                ('release_price', models.CharField(default=0, max_length=4)),
                ('image', models.ImageField(upload_to='ram_images/')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='StorageDriveModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('manufacturer', models.CharField(choices=[('Adata', 'Adata'), ('Corsair', 'Corsair'), ('Crucial', 'Crucial'), ('Gigabyte Aorus', 'Gigabyte Aorus'), ('HP', 'HP'), ('Intel', 'Intel'), ('Kingston', 'Kingston'), ('Micron', 'Micron'), ('Pioneer', 'Pioneer'), ('PNY', 'PNY'), ('Samsung', 'Samsung'), ('SanDisk', 'SanDisk'), ('Seagate', 'Seagate'), ('Western Digital', 'Western Digital'), ('Axle', 'Axle'), ('BIOSTAR', 'BIOSTAR'), ('G.SKILL', 'G.SKILL'), ('Plextor', 'Plextor'), ('Verbatim', 'Verbatim'), ('Viking', 'Viking')], max_length=50)),
                ('type', models.CharField(choices=[('nvme m.2 SSD', 'nvme m.2 SSD'), ('HDD', 'HDD'), ('2.5 sata SSD', '2.5 sata SSD')], max_length=50)),
                ('capacity', models.CharField(max_length=50)),
                ('release_price', models.CharField(default=0, max_length=4)),
                ('image', models.ImageField(upload_to='storage_drivers_images/')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MotherBoardModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('model', models.CharField(max_length=50)),
                ('chipset', models.CharField(max_length=10)),
                ('socket', models.CharField(max_length=10)),
                ('ram_type', models.CharField(choices=[('DDR2', 'DDR2'), ('DDR3', 'DDR3'), ('DDR4', 'DDR4'), ('DDR5', 'DDR5')], max_length=5)),
                ('ram_slots_count', models.IntegerField()),
                ('ram_max_capacity', models.IntegerField()),
                ('ram_max_frequency', models.IntegerField()),
                ('PCIe_gen_support', models.CharField(max_length=20)),
                ('slots_and_connectors', models.TextField(max_length=200)),
                ('IO_connectors', models.TextField(max_length=200)),
                ('supported_cpus', models.ManyToManyField(to='hardware.cpumodel')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
